IAM Overview
--------------------------------------
* users
* group
* iam policy
* IAM role
* multi-factor authentication
* Identity federation
* API keys


IAM USER
--------------------------------------
* IAM User is an entity that represents a person or a service
* IAM User can be assigned a key ID and secret access key, allowing them to access AWS API, cli,SDK
* password for access management console
* by default user cannot access anything in the account
* Root account user best practices, dont use root user credentials, dont share, MFA
* IAM can repesent services


IAM Groups
--------------------------------------
* Groups are a collection of user, ie developer, admins, operation group
* group is not an identity
* principle of least privilege
* you cannot nest groups


IAM Roles
--------------------------------------
* Roles are created than assumed by an entity
* IAM roles can delegate permission to resources without permanent credentials
* IAM user, services can assume a role to obtain temporary security credentials
* delegate permission using roles


IAM Policies
--------------------------------------
* IAM Policies are document that define permission and can be applied to user,groups and roles
* policy arte written in JSON
* all permission are implicity denined
* most restrictive policy is applied 
* conditional element (IP -> permission)


Authentication Methods
--------------------------------------
* Access key ID + secret access key -> API
    * secret acess is returned only at creation, lost key must be re-created
    * access key can be disabled
* IAM user -> password -> AWS management console
    * Allow user to change password


Multi-factor authentication
--------------------------------------
1. something you know, password
2. something you have, id gen token
3. somethin you are, biometric


IAM Best Practices
--------------------------------------
* lock away AWS root user access keys
* create individual IAM user
* use AWS defined policies to assign permission whnever possible
* use group to assign permission to IAM user
* grant least privilege
* use access level to review IAM permission
* configure a strong password policy
* use roles for applications that run on AWS EC2 instance
* delgate roles instead of sharing credentials

EXAM CRAM
--------------------------------------
* IAM user can be a user or service
    * they can be assigned via access key and password
* by default users cannot access anything
* account root user crdentials are the email address used to create the account and password
* root user have full administrative permissions 
* best practice for root accounts: 
    * dont use root user credentials
    * dont share
    * create iam user and assign administrative permission as required
    * enable MFA
* IAM  users can represnet applications know as service account

* IAM groups are a collection of users and policies attached
* a group is not an identiy and cannot be identified as a principal in the IAM policy
* use groups to assign permission to users

* IAM roles are created and can be assumed by users

* IAM policy are document that define permission for user, group and roles

* Authentication method, Access key (command line), IAM user (password), certification (SSL)

* IAM best practices, lock root user access key, create individual iam user, use aws defined policies, use gorup to assign permission to iam users, grant least privilege, use access levels to review iam permission configure a strong passsord policy, enabvle mfa, use roles for applications, delegate usign roles instead of credentials, rotate credentials regularly, remove unnessary credentials, monitor activity in your aws account.


- an access key ID and secret access key is asssocieted with user entity

- what are the credentials for an AWS root account, the email address used to create the account

- What does ARN stand for, Amazon resource name

- use least privilege when assigning permission to users

- which IAM entity can be used to delegate permission, Role.
__You  delegate permissions using a role and define permission to the role through a policy__

- How to add extra level of security, MFA 

- By default users are created with no permissions
